{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aleor\\\\Desktop\\\\projects\\\\notes\\\\frontend\\\\src\\\\components\\\\appnotes\\\\creatednotes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../../styles/creatednotes.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreatedNotes(props) {\n  _s();\n\n  const user = localStorage.getItem(\"id\");\n  const [userNotes, setUserNotes] = useState([]);\n  const [name, setName] = useState(props.match.params.name);\n  const [note, setNote] = useState(props.match.params.note);\n  const id = props.match.params.id;\n  const [edit, setEdit] = useState(false);\n  useEffect(() => {\n    if (user) {\n      axios.get(`http://localhost:3001/api/notes/${user}/${name}`).then(res => {\n        setUserNotes(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {//pass\n    }\n  });\n\n  const EditNote = e => {\n    e.preventDefault();\n    axios.patch(`http://localhost:3001/api/notes/${id}`, {\n      note,\n      name\n    }).then(() => {\n      setEdit(true);\n    }).then(() => {\n      if (edit) {\n        window.setTimeout(() => {\n          this.props.history.push(\"/\");\n          window.history.go(0);\n        }, 2000);\n      }\n    });\n  };\n\n  const OpenPopUp = e => {\n    document.getElementById(\"OpenPopUpEdit\").style.display = \"block\";\n  };\n\n  const ClosePopUP = e => {\n    document.getElementById(\"OpenPopUpEdit\").style.display = \"none\";\n  };\n\n  const SeeUserNotes = userNotes.map(i => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserCreatedNotesList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"name: \", i.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"UCNp\",\n        children: i.note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, i._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userCreatedNotesWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserCreatedNotesMain\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"OpenButton\",\n        onClick: OpenPopUp,\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"UserCreatedNotesContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: EditNote,\n          className: \"creatednotesForm\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            id: \"OpenPopUpEdit\",\n            className: \"OpenPopUp\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"userCreatedName\",\n                name: \"name\",\n                defaultValue: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"userCreatedNote\",\n                name: \"note\",\n                defaultValue: note,\n                onChange: e => setNote(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"userCreatedEdit\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: ClosePopUP,\n              id: \"ClosePopUp\",\n              children: \"close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userSeeNotes\",\n      children: SeeUserNotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatedNotes, \"o25ujcGBmm0Mw2IZ3BtaKRUtVtc=\");\n\n_c = CreatedNotes;\nexport default _c2 = withRouter(CreatedNotes);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreatedNotes\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/aleor/Desktop/projects/notes/frontend/src/components/appnotes/creatednotes.js"],"names":["React","useState","useEffect","withRouter","axios","CreatedNotes","props","user","localStorage","getItem","userNotes","setUserNotes","name","setName","match","params","note","setNote","id","edit","setEdit","get","then","res","data","catch","err","console","log","EditNote","e","preventDefault","patch","window","setTimeout","history","push","go","OpenPopUp","document","getElementById","style","display","ClosePopUP","SeeUserNotes","map","i","_id","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/creatednotes.css\";\r\n\r\nfunction CreatedNotes(props) {\r\n  const user = localStorage.getItem(\"id\");\r\n  const [userNotes, setUserNotes] = useState([]);\r\n  const [name, setName] = useState(props.match.params.name);\r\n  const [note, setNote] = useState(props.match.params.note);\r\n  const id = props.match.params.id;\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      axios\r\n        .get(`http://localhost:3001/api/notes/${user}/${name}`)\r\n        .then((res) => {\r\n          setUserNotes(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      //pass\r\n    }\r\n  });\r\n\r\n  const EditNote = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .patch(`http://localhost:3001/api/notes/${id}`, {\r\n        note,\r\n        name,\r\n      })\r\n      .then(() => {\r\n        setEdit(true);\r\n      })\r\n      .then(() => {\r\n        if (edit) {\r\n          window.setTimeout(() => {\r\n            this.props.history.push(\"/\");\r\n            window.history.go(0);\r\n          }, 2000);\r\n        }\r\n      });\r\n  };\r\n\r\n  const OpenPopUp = (e) => {\r\n    document.getElementById(\"OpenPopUpEdit\").style.display = \"block\";\r\n  };\r\n\r\n  const ClosePopUP = (e) => {\r\n    document.getElementById(\"OpenPopUpEdit\").style.display = \"none\";\r\n  };\r\n\r\n  const SeeUserNotes = userNotes.map((i) => {\r\n    return (\r\n      <div key={i._id} className=\"UserCreatedNotesList\">\r\n        <h1>name: {i.name}</h1>\r\n        <p className=\"UCNp\">{i.note}</p>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"userCreatedNotesWrapper\">\r\n      <div className=\"UserCreatedNotesMain\">\r\n        <button id=\"OpenButton\" onClick={OpenPopUp}>\r\n          edit\r\n        </button>\r\n        <div className=\"UserCreatedNotesContainer\">\r\n          <form onSubmit={EditNote} className=\"creatednotesForm\">\r\n            <ul id=\"OpenPopUpEdit\" className=\"OpenPopUp\">\r\n              <li>\r\n                <input\r\n                  className=\"userCreatedName\"\r\n                  name=\"name\"\r\n                  defaultValue={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></input>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  className=\"userCreatedNote\"\r\n                  name=\"note\"\r\n                  defaultValue={note}\r\n                  onChange={(e) => setNote(e.target.value)}\r\n                ></input>\r\n              </li>\r\n              <button type=\"submit\" className=\"userCreatedEdit\">\r\n                Edit\r\n              </button>\r\n              <button onClick={ClosePopUP} id=\"ClosePopUp\">\r\n                close\r\n              </button>\r\n            </ul>\r\n          </form>\r\n        </div>\r\n      </div>\r\n        <div className='userSeeNotes'>{SeeUserNotes}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(CreatedNotes);\r\n"]},"metadata":{},"sourceType":"module"}